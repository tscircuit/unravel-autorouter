<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <g>
    <circle data-type="point" data-label="source_trace_76 start (z=0)" data-x="-2.21875" data-y="10.81640625" cx="600" cy="110" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="source_trace_76 end (z=1)" data-x="-2.21875" data-y="9.70703125" cx="600" cy="390" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="source_net_0_mst22 start (z=0)" data-x="-2.21875" data-y="10.26171875" cx="600" cy="250" r="3" fill="orange" />
  </g>
  <g>
    <circle data-type="point" data-label="source_net_0_mst22 end (z=0)" data-x="-3.328125" data-y="11.09375" cx="320" cy="40" r="3" fill="orange" />
  </g>
  <polyline data-points="-2.21875,10.81640625 -2.21875,9.70703125" data-type="line" points="600,110 600,390" fill="none" stroke="rgba(255, 0, 0, 0.5)" stroke-width="1" />
  <polyline data-points="-2.21875,10.26171875 -3.328125,11.09375" data-type="line" points="600,250 320,40" fill="none" stroke="rgba(255, 0, 0, 0.5)" stroke-width="1" />
  <polyline data-points="-2.21875,10.81640625 -2.7724650000000004,10.4831925" data-type="line" points="600,110 460.2454535211266,194.10127323943652" fill="none" stroke="rgba(0, 255, 0, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-2.7724650000000004,10.4831925 -2.7724650000000004,10.4831925" data-type="line" points="460.2454535211266,194.10127323943652 460.2454535211266,194.10127323943652" fill="none" stroke="rgba(0, 255, 0, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-2.7724650000000004,10.4831925 -2.21875,9.70703125" data-type="line" points="460.2454535211266,194.10127323943652 600,390" fill="none" stroke="rgba(0, 255, 0, 0.75)" stroke-width="37.859154929577464" stroke-dasharray="0.2 0.2" />
  <polyline data-points="-2.21875,10.26171875 -2.2751371507882237,10.204687544212158" data-type="line" points="600,250 585.7682008151413,264.39435503828327" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-2.2751371507882237,10.204687544212158 -2.2947010856135157,10.17232011121305" data-type="line" points="585.7682008151413,264.39435503828327 580.8303738845887,272.5637127755231" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-2.2947010856135157,10.17232011121305 -2.316368414326534,10.141321318797187" data-type="line" points="580.8303738845887,272.5637127755231 575.3616621868804,280.3876333402027" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-2.316368414326534,10.141321318797187 -2.5761117037999184,9.94808000428404" data-type="line" points="575.3616621868804,280.3876333402027 509.8039192662741,329.16065243985895" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-2.5761117037999184,9.94808000428404 -2.899196174647379,9.927459462136948" data-type="line" points="509.8039192662741,329.16065243985895 428.259219018577,334.36516110571665" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-2.899196174647379,9.927459462136948 -3.191749653479863,10.09705731725143" data-type="line" points="428.259219018577,334.36516110571665 354.42036914987125,291.55961795569556" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-3.191749653479863,10.09705731725143 -3.336732781390461,10.402558320617509" data-type="line" points="354.42036914987125,291.55961795569556 317.82744447159075,214.4528858385106" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <polyline data-points="-3.336732781390461,10.402558320617509 -3.328125,11.09375" data-type="line" points="317.82744447159075,214.4528858385106 320,40" fill="none" stroke="rgba(255, 0, 255, 0.75)" stroke-width="37.859154929577464" />
  <rect data-type="rect" data-label="" data-x="-3.328125" data-y="9.984375" x="40" y="40" width="560" height="560" fill="rgba(240, 240, 240, 0.1)" stroke="rgba(0, 0, 0, 0.5)" stroke-width="0.003962053571428571" />
  <circle data-type="circle" data-label="" data-x="-2.7724650000000004" data-y="10.4831925" cx="460.2454535211266" cy="194.10127323943652" r="75.71830985915493" fill="rgba(255, 165, 0, 0.7)" stroke="rgba(0, 0, 0, 0.5)" stroke-width="0.003962053571428571" />
  <circle data-type="circle" data-label="" data-x="-2.7724650000000004" data-y="10.4831925" cx="460.2454535211266" cy="194.10127323943652" r="100.95774647887325" fill="rgba(0, 0, 0, 0)" stroke="rgba(255, 165, 0, 0.7)" stroke-width="0.003962053571428571" />
  <circle data-type="circle" data-label="" data-x="-2.7724650000000004" data-y="10.4831925" cx="460.2454535211266" cy="194.10127323943652" r="75.71830985915493" fill="rgba(0, 0, 255, 0.8)" stroke="black" stroke-width="0.003962053571428571" />
  <circle data-type="circle" data-label="" data-x="-2.7724650000000004" data-y="10.4831925" cx="460.2454535211266" cy="194.10127323943652" r="100.95774647887325" fill="rgba(0, 0, 255, 0.3)" stroke="black" stroke-width="0.003962053571428571" />
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 252.3943661971831,
        "c": 0,
        "e": 1160,
        "b": 0,
        "d": -252.3943661971831,
        "f": 2840
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>
